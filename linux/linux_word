Determine 下决心，做出决定; 决定，确定; 判定，
understood 了解; 懂，理解( understand的过去式和过去分词 ); 默认; 听说
terse 精练的，简洁的; 扼要的

处理一下文本，文件，

注释，命令，变量，结构控制语句

执行:sh script-file,./script-file
chmod u+r script-file


脚本:
	类型，
	
	变量，引用
	
	流程控制：
		if
		循环
		遍历
		
	退出，异常处理，文件流
	
	1.开头,声明脚本的类型
	#!/bin/bash
	
	2.变量
	2.1
	一般都用字母
	=赋值符号，两边不能有空格，不然会被当作命令
	使用的时候，添加$符号
	v1=loujie
	echo $v1
	
	2.2
	+,-,*,/需要增加双重(())
	例子:
	i1=10
	i2=20
	echo $(($i1*$i2))
	
	2.3
	shell变量表达式
	${#string} $string的长度
	${string:position} 从position开始提取字符串,包含了position
	${string:position:length} 从位置position开始提取长度为length的字符串
	${string#substring} 删除开头,
	${string##substring} 删除开头,可以使用通配符
	${string%substring} 从结尾删除最短匹配字符串
	${string%%substring} 从结尾删除最长匹配字符串
	
	2.4
	test与[],一些判断
	-f 文件是否存在
	-d 目录是否存在
	-r 是否有读权限
	-w 写权限
	-x 执行权限
	
	test -f /abc/lll && echo 'exists' || echo 'not exists'#存在输出exists，不存在not exists
	
	[],中间需要用[空格]分割，变量最好都有"",常量用''
	[ -f '/abc/lll' ] && echo 'exists' || echo 'not exists'
	
	2.5
	if条件判断语句
	if [];then
	echo 'if'
	elif [];then#
	echo 'elif'
	else
	echo 'else'
	fi;
	
	read,函数,让用户输入参数
	read number#让输入一个数字,用number接收
	
	case $number in
	1)
		echo '';;
		
	2)
		echo '';;
		
	*)
		echo '';;
	esac;
	
	[]   -eq -ne -gt -ge -lt -le
	(()) ==  !=  >   >=  <   <=
	
	2.6
	循环
	while condition;do
	echo $i
	done;
	
	until与while基本一致,while的条件需要成立,until条件不成立的时候才会执行循环体
	
	for((int i=1;i<10;i++));do
		
	done;
	
	2.7
	方法
	function print(){
		
	}
	
	lsof -i :80查看
	
	awk 空格分割
	
	
	

	
	
	
	
	
	16379