#需要3步:1.配置Logger;2.logger.日志的范围;3.配置appender,写日志的方式;
#1.配置根Logger
#格式:log4j.rootLogger = [ level ] , appenderName, appenderName, …
#level=debug,info,warn,error
#appenderName=输出的目的地,可以多配置几个,不过一般都是根据日志级别分的
log4j.rootLogger=debug,A

#可以根据包名,来打印日志
log4j.logger.com.loujie.www.test=debug,B
log4j.logger.com.loujie.www.ox=debug,C

#2.配置appender,日志输出目的地
#目的地为控制台,都实现了Appender接口
log4j.appender.A=org.apache.log4j.ConsoleAppender
#日志输出的位置,控制台
log4j.appender.A.Target=System.out
#那个级别日志输出
log4j.appender.A.Threshold=debug
#输出日志格式的布局,Layout抽象类
log4j.appender.A.layout=org.apache.log4j.PatternLayout
#格式
log4j.appender.A.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

#3.配置另一个appender
#每天产生一个日志文件
log4j.appender.B= org.apache.log4j.DailyRollingFileAppender  
#文件位置
log4j.appender.B.File=D://logs/log.log
#追加
log4j.appender.B.Append=true
log4j.appender.B.Threshold=DEBUG
log4j.appender.B.layout=org.apache.log4j.PatternLayout  
log4j.appender.B.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

#4.配置另一个appender
#每天产生多个日志文件,根据日志文件大小
log4j.appender.C= org.apache.log4j.RollingFileAppender  
#文件位置
log4j.appender.C.File=D://logs/abc.log
#追加
log4j.appender.C.Append=true
log4j.appender.C.Threshold=DEBUG
log4j.appender.C.layout=org.apache.log4j.PatternLayout  
log4j.appender.C.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
