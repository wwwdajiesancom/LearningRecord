<?xml version="1.0" encoding="UTF-8"?>
<!-- doc:https://logback.qos.ch/manual/appenders.html#TimeBasedRollingPolicy -->
<!-- scan:配置文件发生改变时,重新加载 -->
<!-- scanPeriod:检测配置,默认为60秒 -->
<!-- debug:为true,将打印出Logback内部的日志 -->
<configuration scan="true" scanPeriod="60 second" debug="false">
	<!-- 子节点,共分为3类,root,appender,logger -->

	<!-- appender,设置一个写日志的规定 -->
	<!-- name:appender的名字,可以取的有一定的意义 -->
	<!-- class:写日志的方式,都实现了Appender接口 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 1.设置日志输出位置,可以不写默认System.out -->
		<target>System.err</target>
		<!-- 2.设置日志格式 -->
		<!-- 默认为PatternLayoutEncoder -->
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n
			</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>

	<!-- 文件日志 -->
	<appender name="file" class="ch.qos.logback.core.FileAppender">
		<file>D://logs//file.log</file>
		<!-- append: true,日志被追加到文件结尾; false,清空现存文件;默认是true -->
		<append>true</append>
		<!-- prudent:是否要安全写入,true速度慢，效率低 -->
		<prudent>false</prudent>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- LevelFilter: 级别过滤器，根据日志级别进行过滤 -->
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%5level] [%thread] %logger{0}
				%msg%n</Pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<appender name="ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%5level] [%thread] %logger{0}
				%msg%n</Pattern>
			<charset>UTF-8</charset>
		</encoder>
		<file>/data/tomcat/api2/business.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/data/tomcat/api2/business-%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- 保存3天 -->
			<maxHistory>3</maxHistory>
			<!-- 超过3GB就会删除 -->
			<totalSizeCap>3GB</totalSizeCap>
		</rollingPolicy>
	</appender>
	
	<appender name="ERROR2"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%5level] [%thread] %logger{0}
				%msg%n</Pattern>
			<charset>UTF-8</charset>
		</encoder>
		<file>/data/tomcat/api2/error.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>/data/tomcat/api2/error-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
			<!-- 保存60天 -->
			<maxHistory>60</maxHistory>
			<!-- 超过3GB就会删除 -->
			<totalSizeCap>3GB</totalSizeCap>
			<!-- 每100MB一个文件,%i就是参数 -->
			<maxFileSize>100MB</maxFileSize>
		</rollingPolicy>
	</appender>
	
	<!-- logger,用来设置某一个package或class,具体要用那个appender;可以设置多个logger -->
	<!-- name:必须,用来指定受此logger约束的某一个package或class;需要是全路径 -->
	<!-- level:可选,设置打印的级别 -->
	<!-- addtivity:是否向上级logger传递打印信息,默认true -->
	<logger name="com.loujie.www" level="debug" addtivity="false">
		<appender-ref ref="ERROR2"/>
	</logger>
	
	<!-- root,它也是一个logger,但它是logger的根 -->
	<!-- level:设置打印日志级别,做为全局的设置 -->
	<root level="debug">
		<!-- 可以包含零个或多个<appender-ref ref="" /> -->
		<appender-ref ref="console" />
		<appender-ref ref="ERROR2"/>
	</root>

</configuration>